<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ServiceSentry.Extensibility.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Styles/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <controls:InverseBoolConverter x:Key="InverseBoolConverter" />

    <!-- =============================================================================== -->
    <!-- CheckBox                                                                        -->
    <!-- =============================================================================== -->
    <Style x:Key="SelectorCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="13" Height="13" 
                                    Background="{DynamicResource {x:Static controls:ResourceKeys.ButtonNormalBackgroundKey}}"
                                    CornerRadius="0"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource {x:Static controls:ResourceKeys.ButtonNormalOuterBorderKey}}">

                                <Path x:Name="CheckMark" SnapsToDevicePixels="False"
                                                  Stroke="{DynamicResource {x:Static controls:ResourceKeys.GlyphBrushKey}}"
                                                  StrokeThickness="2" StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round" StrokeLineJoin="Round"
                                                  Data="M 2 6 L 4 8 9 3" />
                                <!--M 0 5 L 3 10 10 0-->
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter x:Name="_content"
                                          Margin="4,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonPressedBackgroundKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonFocusedBackgroundKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonPressedBackgroundKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ControlDisabledBackgroundKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonDisabledOuterBorderKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static controls:ResourceKeys.ControlDisabledForegroundKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =============================================================================== -->
    <!-- ToggleButton                                                                    -->
    <!-- =============================================================================== -->
    <Style x:Key="ToggleButtonStyleKey" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                                        x:Name="Border"
                                        BorderThickness="1"
                                        CornerRadius="2"
                                        Background="Transparent"
                                        BorderBrush="Transparent">
                        <ContentPresenter
                                            Margin="2"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonFocusedBackgroundKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonNormalOuterBorderKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonPressedBackgroundKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonPressedBackgroundKey}}" />
                        </Trigger>
                        <Trigger Property="CheckBox.IsChecked" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonPressedBackgroundKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonPressedBackgroundKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ControlDisabledBackgroundKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ButtonDisabledOuterBorderKey}}" />
                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static controls:ResourceKeys.ControlDisabledForegroundKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>