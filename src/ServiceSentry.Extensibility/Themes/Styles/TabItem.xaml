<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="TabMargins.xaml" />
    </ResourceDictionary.MergedDictionaries>

   

    <!-- The Style for TabItems (strips). -->
    <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!-- The Grid helps defining the general height of TabItems. -->
                    <Grid Height="25" VerticalAlignment="Bottom" ><!--Margin="0,4,0,0"-->
                        <!-- 
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage.
                     -->
                        <Border Name="Border"
                             Background="{StaticResource TabItemBackgroundBrushUnselected}"
                             BorderBrush="{StaticResource TabItemBorderBrushSelected}" 
                             Margin="{StaticResource TabItemMarginSelected}" 
                             BorderThickness="1,1,1,0" 
                             CornerRadius="3,3,0,0"
                             >
                            
                            <!-- This is where the Content of the TabItem will be rendered. -->
                            <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="15,3,20,2"
                                          RecognizesAccessKey="True"/> 
                        </Border>
                    </Grid>
                    
                    
                    <ControlTemplate.Triggers>
                        <!-- The appearance of a TabItem when it's inactive/unselected -->
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter TargetName="Border" Property="BorderBrush" 
                                Value="{StaticResource TabItemBorderUnselected}" />
                            <Setter Property="Foreground" 
                                Value="{StaticResource TabItemTextBrushUnselected}" />
                            
                            <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMarginBase}"/>
                        </Trigger>

                        <!-- 
                        The appearance of a TabItem when it's disabled 
                        (in addition to Selected=False)
                     -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItemDisabledBorderBrush}" />
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource TabItemBackgroundBrushDisabled}" />
                            <Setter Property="Foreground" 
                                Value="{StaticResource TabItemTextBrushDisabled}" />
                        </Trigger>

                        <!-- The appearance of a TabItem when the mouse hovers over it -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="Foreground" Value="{StaticResource TabItemTextBrushHover}" />
                            <Setter Property="BorderBrush" 
                                TargetName="Border" 
                                Value="{StaticResource TabItemHoverBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Background" TargetName="Border"
                                Value="{StaticResource TabItemHoverBackgroundBrush}"/>
                            <!-- 
                           To further increase the hover-effect, extend the TabItem's height a little
                           more compared to unselected TabItems.
                        -->
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMarginHover}"/>
                        </MultiTrigger>

                        <!-- The appearance of a TabItem when it's active/selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <!-- We want the selected TabItem to always be on top. -->
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="BorderBrush" 
                                Value="{StaticResource TabItemBorderBrushSelected}" />
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource TabItemBackgroundBrushSelected}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" 
                                Value="{StaticResource TabItemTextBrushSelected}"/>
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMarginSelected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabItemStyle}" />
    

</ResourceDictionary>